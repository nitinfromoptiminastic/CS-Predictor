import jsPDF from 'jspdf';
import { PredictionResult, AssetAnalysis } from '@/types';

export class ReportService {
  static generatePDF(
    predictions: PredictionResult[],
    analysis: AssetAnalysis,
    fileName: string,
    userEmail: string
  ): jsPDF {
    const pdf = new jsPDF();
    let yPosition = 30;
    
    // Header
    pdf.setFontSize(20);
    pdf.text('Content Success Prediction Report', 20, yPosition);
    yPosition += 20;
    
    pdf.setFontSize(12);
    pdf.text(`Generated by: ${userEmail}`, 20, yPosition);
    yPosition += 10;
    pdf.text(`Date: ${new Date().toLocaleDateString()}`, 20, yPosition);
    yPosition += 10;
    pdf.text(`Asset: ${fileName}`, 20, yPosition);
    yPosition += 20;
    
    // Brand Safety Section
    pdf.setFontSize(16);
    pdf.text('Brand Safety Analysis', 20, yPosition);
    yPosition += 15;
    
    pdf.setFontSize(12);
    pdf.text(`Safety Score: ${(analysis.brandSafety.score * 100).toFixed(1)}%`, 20, yPosition);
    yPosition += 10;
    pdf.text(`NSFW: ${analysis.brandSafety.nsfw ? 'Detected' : 'Clear'}`, 20, yPosition);
    yPosition += 10;
    pdf.text(`Violent Content: ${analysis.brandSafety.violent ? 'Detected' : 'Clear'}`, 20, yPosition);
    yPosition += 10;
    pdf.text(`Sensitive Content: ${analysis.brandSafety.sensitive ? 'Detected' : 'Clear'}`, 20, yPosition);
    yPosition += 20;

    // Brand Design Evaluation Section
    if (analysis.brandDesignEvaluation) {
      if (yPosition > 200) {
        pdf.addPage();
        yPosition = 30;
      }

      pdf.setFontSize(16);
      pdf.text('Brand Design Evaluation', 20, yPosition);
      yPosition += 15;

      const evaluation = analysis.brandDesignEvaluation;
      const categories = [
        { title: 'Design Consistency', data: evaluation.designConsistency },
        { title: 'Format & Size', data: evaluation.formatAndSize },
        { title: 'Content Clarity', data: evaluation.contentClarity },
        { title: 'Text Accuracy', data: evaluation.textAccuracy },
        { title: 'Brand Presence', data: evaluation.brandPresence }
      ];

      categories.forEach(category => {
        if (yPosition > 220) {
          pdf.addPage();
          yPosition = 30;
        }

        pdf.setFontSize(14);
        pdf.text(`${category.title}: ${category.data.score}/10`, 20, yPosition);
        yPosition += 10;

        pdf.setFontSize(10);
        pdf.text(category.data.reasoning, 30, yPosition);
        yPosition += 8;

        if (category.data.recommendations.length > 0) {
          pdf.text('Recommendations:', 30, yPosition);
          yPosition += 6;
          category.data.recommendations.forEach(rec => {
            pdf.text(`• ${rec}`, 35, yPosition);
            yPosition += 5;
          });
        }
        yPosition += 8;
      });

      yPosition += 10;
    }
    
    // Platform Predictions
    if (yPosition > 200) {
      pdf.addPage();
      yPosition = 30;
    }

    pdf.setFontSize(16);
    pdf.text('Platform Predictions', 20, yPosition);
    yPosition += 15;
    
    predictions.forEach(prediction => {
      if (yPosition > 250) {
        pdf.addPage();
        yPosition = 30;
      }
      
      pdf.setFontSize(14);
      pdf.text(prediction.platform.toUpperCase(), 20, yPosition);
      yPosition += 10;
      
      pdf.setFontSize(12);
      pdf.text(`Success Score: ${prediction.successScore}/10`, 30, yPosition);
      yPosition += 8;
      pdf.text(`Polarisation: ${prediction.polarisationScore}`, 30, yPosition);
      yPosition += 8;
      pdf.text(`Strategy: ${prediction.strategicAngle}`, 30, yPosition);
      yPosition += 10;
      
      pdf.text('Recommendations:', 30, yPosition);
      yPosition += 8;
      
      prediction.recommendations.forEach(rec => {
        pdf.text(`• ${rec}`, 35, yPosition);
        yPosition += 6;
      });
      
      yPosition += 10;
    });
    
    return pdf;
  }
}
